type Query {
    events: [Events!]! @table @all(model: "Narsil\\Models\\Entities\\Entity")
    event(uuid: String! @eq): Events @table @find(model: "Narsil\\Models\\Entities\\Entity")
    pages: [Pages!]! @table @all(model: "Narsil\\Models\\Entities\\Entity")
    page(uuid: String! @eq): Pages @table @find(model: "Narsil\\Models\\Entities\\Entity")
}

type Events {
    uuid: String
    id: Int
    revision: Int
    created_at: DateTime
    created_by: Int
    updated_at: DateTime
    updated_by: Int
    deleted_at: DateTime
    deleted_by: Int
    title: String
}
type Pages {
    uuid: String
    id: Int
    revision: Int
    created_at: DateTime
    created_by: Int
    updated_at: DateTime
    updated_by: Int
    deleted_at: DateTime
    deleted_by: Int
    title: String
    builder: String
    meta_title: String
    meta_description: String
    open_graph_type: String
    open_graph_title: String
    open_graph_description: String
    open_graph_image: String
    nofollow: Boolean
    noindex: Boolean
}
